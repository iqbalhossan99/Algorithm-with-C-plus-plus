// Pseudocode: Bellman-Ford

Input -> A weighted graph & a src node (with no negative cycles) & a destination_node
Ouput -> Shortest distance from src node to all other nodes


n -> number of nodes in graph
m -> number of edges in graph


time complexity -> O(n*m)
Space Complexity -> O(n)

/*
u ----> v

d[u] + c(u,v) < d[v]
=> d[v] = d[u] + c(u,v)

*/

- create a distance array "d" with all values to infinity
- create a parent array
- d[src] = 0 

- negative_cycle = false
