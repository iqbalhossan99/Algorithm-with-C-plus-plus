// Pseodocode: Bellman-Ford

Input -> A weighted graph & a src node (with no negative cycles)
Output -> Shorted distance from src node to all other nodes

n -> number of nodes in graph
m -> number of edges in graph


time complexity -> 
space complexity ->



/*

 u ---> v

d[u] + c(u,v) < d[v]

=> d[v] = d[u] + c(u,v)

*/


- create a distance array "d' with all values to infinity
- d[src] = 0


- negative_cycle = false

- for i = 1 to n:
	- for all edge e(u,v,w)
		- if d[u] + < d[v]:
			- d[v] = d[u] + w
			- if i == n:
				- negative_cycle = true

- print whether negative cycle exists
- print the distance array "d"

			